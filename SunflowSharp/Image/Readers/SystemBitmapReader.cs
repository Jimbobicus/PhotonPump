// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using SunflowSharp.Image;
using SunflowSharp.Image.Formats;

namespace SunflowSharp.Image.Readers
{
	public class SystemBitmapReader : BitmapReader
	{
		public override Bitmap load(string filename, bool isLinear) 
		{
			// regular image, load using Java api
			System.Drawing.Bitmap bi = new
				System.Drawing.Bitmap(filename);
			int width = bi.Width;
			int height = bi.Height;
			System.Drawing.Color tmpColour;
			byte[] pixels = new byte[4 * width * height];
			for (int y = 0, index = 0; y < height; y++) {
				for (int x = 0; x < width; x++, index += 4) {
					tmpColour = bi.GetPixel(x,y);
					pixels[index + 0] = tmpColour.R;
					pixels[index + 1] = tmpColour.G;
					pixels[index + 2] = tmpColour.B;
					pixels[index + 3] = tmpColour.A;
				}
			}
			if (!isLinear) {
				for (int index = 0; index < pixels.Length; index += 4) {
					pixels[index + 0] = Color.NATIVE_SPACE.rgbToLinear(pixels[index + 0]);
					pixels[index + 1] = Color.NATIVE_SPACE.rgbToLinear(pixels[index + 1]);
					pixels[index + 2] = Color.NATIVE_SPACE.rgbToLinear(pixels[index + 2]);
				}
			}
			return new BitmapRGBA8(width, height, pixels);
		}
	}
}

