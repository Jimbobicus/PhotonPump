// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;

namespace SunflowSharp.Image.Formats
{
	public class BitmapRGBE : Bitmap {
		private int w, h;
		private int[] data;
		private static float[] EXPONENT = new float[256];
		
		static BitmapRGBE() {
			EXPONENT[0] = 0;
			for (int i = 1; i < 256; i++) {
				float f = 1.0f;
				int e = i - (128 + 8);
				if (e > 0)
					for (int j = 0; j < e; j++)
						f *= 2.0f;
				else
					for (int j = 0; j < -e; j++)
						f *= 0.5f;
				EXPONENT[i] = f;
			}
		}
		
		public BitmapRGBE(int w, int h, int[] data) {
			this.w = w;
			this.h = h;
			this.data = data;
		}
		
		public override int getWidth() {
			return w;
		}
		
		public override int getHeight() {
			return h;
		}
		
		public override Color readColor(int x, int y) {
			int rgbe = data[x + y * w];
			float f = EXPONENT[rgbe & 0xFF];
			float r = f * ((int)((uint)rgbe >> 24) + 0.5f);
			float g = f * (((rgbe >> 16) & 0xFF) + 0.5f);
			float b = f * (((rgbe >> 8) & 0xFF) + 0.5f);
			return new Color(r, g, b);
		}
		
		public override float readAlpha(int x, int y) {
			return 1;
		}
	}
}

